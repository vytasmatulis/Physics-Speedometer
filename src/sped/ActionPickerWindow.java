/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sped;

import sped.ArduinoConnection.ArduinoConnectionResult;

/**
 *
 * @author edwinfinch
 */
public class ActionPickerWindow extends javax.swing.JFrame implements DataCollectorCallback {

    ArduinoConnection arduinoConnection;
    boolean connectedToArduino = false;
    
    /**
     * Creates new form ActionPickerWindow
     */
    public ActionPickerWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        welcomeLabel = new javax.swing.JLabel();
        whatWouldYouLikeLabel = new javax.swing.JLabel();
        doSomethingElsePanel = new javax.swing.JPanel();
        settingsButton = new javax.swing.JButton();
        helpButton = new javax.swing.JButton();
        testSignalToArduinoButton = new javax.swing.JButton();
        viewAllButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        welcomeLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        welcomeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        welcomeLabel.setText("Welcome to Mave");

        whatWouldYouLikeLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        whatWouldYouLikeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        whatWouldYouLikeLabel.setText("What would you like to do?");
        whatWouldYouLikeLabel.setToolTipText("");

        doSomethingElsePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        settingsButton.setText("Settings");

        helpButton.setText("Help");

        testSignalToArduinoButton.setText("Test Connection To Arduino");
        testSignalToArduinoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testSignalToArduinoButtonActionPerformed(evt);
            }
        });

        viewAllButton.setText("View All Simulations");
        viewAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAllButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout doSomethingElsePanelLayout = new javax.swing.GroupLayout(doSomethingElsePanel);
        doSomethingElsePanel.setLayout(doSomethingElsePanelLayout);
        doSomethingElsePanelLayout.setHorizontalGroup(
            doSomethingElsePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(doSomethingElsePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(helpButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addComponent(testSignalToArduinoButton)
                .addGap(55, 55, 55)
                .addComponent(settingsButton)
                .addContainerGap())
            .addGroup(doSomethingElsePanelLayout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addComponent(viewAllButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        doSomethingElsePanelLayout.setVerticalGroup(
            doSomethingElsePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(doSomethingElsePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(viewAllButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(doSomethingElsePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(settingsButton)
                    .addComponent(helpButton)
                    .addComponent(testSignalToArduinoButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(welcomeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(whatWouldYouLikeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(doSomethingElsePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(welcomeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(whatWouldYouLikeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(doSomethingElsePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void testSignalToArduinoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testSignalToArduinoButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_testSignalToArduinoButtonActionPerformed

    private void viewAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAllButtonActionPerformed
        SimulationPickerWindow simulationPicker = new SimulationPickerWindow();
        simulationPicker.setVisible(true);
    }//GEN-LAST:event_viewAllButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ActionPickerWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ActionPickerWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ActionPickerWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ActionPickerWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ActionPickerWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel doSomethingElsePanel;
    private javax.swing.JButton helpButton;
    private javax.swing.JButton settingsButton;
    private javax.swing.JButton testSignalToArduinoButton;
    private javax.swing.JButton viewAllButton;
    private javax.swing.JLabel welcomeLabel;
    private javax.swing.JLabel whatWouldYouLikeLabel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void gotTravelThroughSensor(int sensorPin, long timeTravelled) {
        System.out.println("Got a pin travel through " + sensorPin + " with a time of " + timeTravelled + "ms.");
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void gotSpeedThroughPole(boolean frontPole, double speedInCmPerSec, long timestamp) {
        System.out.println("Got a speed of " + speedInCmPerSec + "cm/sec on the " + (frontPole ? "front pole" : "back pole") + " with a timestamp " + timestamp);
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void gotAccelerationAndFriction(double accelerationInCmSquaredPerSec, double forceOfFriction, double coefficientOfFriction) {
        System.out.println("Got an acceleration of " + accelerationInCmSquaredPerSec + "cm/sec^2 with a force of friction of " + forceOfFriction + " and a coefficient of " + coefficientOfFriction);
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
